{"version":3,"file":"static/js/334.2f27fbdc.chunk.js","mappings":"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","sources":["api/hospitalList/index.ts","pages/hospital/hospitalList/index.tsx","../node_modules/antd/es/space/Item.js","../node_modules/antd/es/space/index.js"],"sourcesContent":["import { request } from \"@utils/http\";\r\nimport {IhospitalParams,IhospitalListRes,IdictList,status,IhospitalShowRes,ISched,IScheduleRule,ItableList} from './model/hospitalListTypes'\r\nexport function reqGetHospitalList({page,limit,hoscode,hosname,hostype,provinceCode,cityCode,districtCode,status}:IhospitalParams){\r\n    return request.get<any,IhospitalListRes>(`/admin/hosp/hospital/${page}/${limit}`,{\r\n        params:{\r\n            hoscode,\r\n            hosname,\r\n            hostype,\r\n            provinceCode,\r\n            cityCode,\r\n            districtCode,\r\n            status\r\n        }\r\n    })\r\n}\r\n// 获取省数据\r\nexport function hospitalFindData(dictCode='province'){\r\n    return request.get<any,IdictList>(`/admin/cmn/dict/findByDictCode/${dictCode}`)\r\n}\r\nexport function hospitalFindCity(parentId='10000'){\r\n    return request.get<any,IdictList>(`/admin/cmn/dict/findByParentId/${parentId}`)\r\n}\r\nexport function reqGetUpdateStatus(id:string,status:status){\r\n    return request.get<any,null>(`/admin/hosp/hospital/updateStatus/${id}/${status}`)\r\n}\r\nexport function reqGetHospitalShowList(id:string){\r\n    return request.get<any,IhospitalShowRes>(`/admin/hosp/hospital/show/${id}`)\r\n}\r\n// 获取排班树形列表数据\r\nexport function reqTreeList(hoscode:string){\r\n    return request.get<any,ISched>(`/admin/hosp/department/${hoscode}`)\r\n}\r\nexport function reqGetScheduleRules(page:number,limit:number,hoscode:string,depcode:string){\r\n    return request.get<any,IScheduleRule>(`/admin/hosp/schedule/getScheduleRule/${page}/${limit}/${hoscode}/${depcode}`)\r\n}\r\n// 获取表格数据\r\nexport function reqGetScheduleList(depcode:string,workDate:string,hoscode:string){\r\n    return request.get<any,ItableList>(`/admin/hosp/schedule/findScheduleList/${hoscode}/${depcode}/${workDate}`)\r\n}\r\n","import React,{useEffect,useState} from 'react'\r\nimport { Select,Card,Button, Form, Input,Space,Table, message} from 'antd';\r\nimport {reqGetHospitalList,hospitalFindData,hospitalFindCity,reqGetUpdateStatus} from '../../../api/hospitalList'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {IhospitalList,IhospitalListItem,IdictList,status} from '@api/hospitalList/model/hospitalListTypes'\r\nimport type { ColumnsType } from 'antd/es/table';\r\n// 需要定义在全局不然，每次页面加载falg都是false\r\nlet falg=false\r\nexport default function HospitalList() {\r\n  const navigate=useNavigate()\r\n  const {Option}=Select\r\n  const [page,setPage]=useState(1)\r\n  const [pageSize,setpageSize]=useState(2)\r\n  const [list,setList]=useState<IhospitalList>([])\r\n  const [total,setTotal]=useState(0)\r\n  const [form]=Form.useForm()\r\n  const [loading,setLoading]=useState(false)\r\n  const [province,setProvince]=useState<IdictList>([])\r\n  const [city,setCity]=useState<IdictList>([])\r\n  const [district, setdistrict]=useState<IdictList>([])\r\n  const [hosType,setHostype]=useState<IdictList>([])\r\n  // 省 市 区 医院类型 加载效果\r\n  const [provinceLoading,setProvinceLoading]=useState(false)\r\n  const [cityLoading,setCityLoading]=useState(false)\r\n  const [districtLoading,setdiscrictLoading]=useState(false)\r\n  const [hosTypeLoading,setHostypeLoading]=useState(false)\r\n  const onFinish = async(values: any) => {\r\n    falg=true\r\n    setPage(1)\r\n    fetch(1,pageSize)\r\n  };\r\n  const fetch= async(page:number,limit:number)=>{\r\n    setLoading(true)\r\n    const value=form.getFieldsValue()\r\n    let result\r\n    if(falg){\r\n      result=await reqGetHospitalList({...value,page,limit})\r\n    }else{\r\n      result=await reqGetHospitalList({page,limit})\r\n    }\r\n    setList(result.content)\r\n    setTotal(result.totalElements)\r\n    setLoading(false)\r\n  }\r\n  const getProvince=async()=>{\r\n    setProvinceLoading(true)\r\n    const result=await hospitalFindData()\r\n    setProvince(result)\r\n    setProvinceLoading(false)\r\n  }\r\n  const getCityList=async(value:string)=>{\r\n    setCityLoading(true)\r\n    const result=await hospitalFindCity(value)\r\n   setCity(result)\r\n   setCityLoading(false)\r\n  }\r\n  // 清空查询框数据\r\n  const claerSelect=()=>{\r\n    falg=false\r\n    fetch(page,pageSize)\r\n    // form.setFieldsValue({hoscode:undefined,hosname:undefined,hosType:undefined,provinceCode:undefined,cityCode:undefined,districtCode:undefined,status:undefined})\r\n    // 表单是空的可以用重置表单\r\n    form.resetFields()\r\n  }\r\n  const districtList=async(value:string)=>{\r\n    setdiscrictLoading(true)\r\n    const result=await hospitalFindCity(value)\r\n    setdistrict(result)\r\n    setdiscrictLoading(false)\r\n  }\r\n  const hosTypeList=async()=>{\r\n    setHostypeLoading(true)\r\n    const result=await hospitalFindCity()\r\n    setHostype(result)\r\n    setHostypeLoading(false)\r\n  }\r\n  const updatStatus= async(id:string,status:status)=>{\r\n    await reqGetUpdateStatus(id,status)\r\n    fetch(page,pageSize)\r\n  }\r\n  useEffect(()=>{\r\n    // 在组件挂载的时候执行，加上[]\r\n  fetch(page,pageSize)\r\n  getProvince()\r\n  hosTypeList()\r\n  },[])\r\n  const columns: ColumnsType<IhospitalListItem> = [\r\n    {\r\n      title: '序号',\r\n      render: (_,record,index)=>{\r\n        return index+1\r\n      },\r\n      width:80,\r\n      align:'center'\r\n    },\r\n    {\r\n      title: '医院logo',\r\n      render:(_)=>{\r\n        return <img src={'data:image/png;base64,'+_.logoData} alt=\"\" width={120}/>\r\n      }\r\n    },\r\n    {\r\n      title: '医院名称',\r\n      dataIndex: 'hosname',\r\n    },\r\n    {\r\n      title: '等级',\r\n      dataIndex: 'param',\r\n      render:(param)=>{\r\n        return param.hostypeString\r\n      }\r\n    },\r\n    {\r\n      title: '详细地址',\r\n      dataIndex: 'param',\r\n      render:(param)=>{\r\n        return param.fullAddress\r\n      }\r\n      },\r\n    {\r\n      title: '状态',\r\n      dataIndex:'status',\r\n      render:(status)=>{\r\n        return status?'已上线':'已下线'\r\n      }\r\n      },\r\n    {\r\n      title: '创建时间',\r\n      dataIndex:'createTime'\r\n      },\r\n    {\r\n      title: '操作',\r\n     render:(_)=>{\r\n      return <Space>\r\n        <Button type='primary' onClick={()=>{\r\n          navigate(`/syt/hospital/orderListShow/${_.id}`)\r\n        }}>查看</Button>\r\n        <Button type='primary' onClick={()=>{\r\n          navigate(`/syt/hospital/hospitalSchedule/${_.hoscode}`)\r\n        }}>排班</Button>\r\n        <Button type='primary' onClick={()=>{\r\n          updatStatus(_.id,_.status?0:1)\r\n        }}>{_.status?'已下线':'已上线'}</Button>\r\n      </Space>\r\n     },\r\n     width:120\r\n      },\r\n  ];\r\n  return (\r\n    <Card>\r\n      <Form\r\n      onValuesChange={()=>{\r\n        falg=false\r\n      }}\r\n      form={form}\r\n      layout='inline'\r\n      onFinish={onFinish}\r\n      autoComplete=\"off\"\r\n    >\r\n      <Form.Item name='provinceCode'>\r\n        <Select loading={provinceLoading} style={{width:200,marginBottom:20}} placeholder='请选择省' onChange={(value)=>{\r\n         getCityList(value)\r\n        // 在选择省的时候清空市跟区\r\n         form.setFieldsValue({cityCode:undefined,districtCode:undefined})\r\n        }}>\r\n        {province.map((item)=>{\r\n         return <Option value={item.value} key={item.id}>{item.name}</Option>\r\n        })}\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item name='cityCode'>\r\n        <Select loading={cityLoading} style={{width:200}} placeholder='请选择市' onChange={(value)=>{\r\n          // 在选择市的时候清空区\r\n          form.setFieldsValue({districtCode:undefined})\r\n          districtList(value)\r\n        }}>\r\n        {city.map((item)=>{\r\n         return <Option value={item.value} key={item.id}>{item.name}</Option>\r\n        })}\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item name='districtCode'>\r\n        <Select loading={districtLoading} style={{width:200}} placeholder='请选择区'>\r\n        {district.map((item)=>{\r\n         return <Option value={item.value} key={item.id}>{item.name}</Option>\r\n        })}\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"hosname\"\r\n      >\r\n        <Input placeholder='医院名称'/>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"hoscode\"\r\n      >\r\n        <Input placeholder='医院编号'/>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"hostype\"\r\n      >\r\n      <Select loading={hosTypeLoading} style={{width:200}} placeholder='医院类型'>\r\n      {hosType.map((item)=>{\r\n         return <Option value={item.value} key={item.id}>{item.name}</Option>\r\n        })}\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"status\"\r\n      >\r\n       <Select style={{width:200}} placeholder='医院状态'>\r\n        <Option value=\"0\">已下线</Option>\r\n        <Option value=\"1\">已上线</Option>\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item >\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n         查询\r\n        </Button>\r\n      </Form.Item>\r\n     <Form.Item>\r\n     <Button onClick={()=>{\r\n      claerSelect()\r\n     }}>清空</Button>\r\n     </Form.Item>\r\n    </Form>\r\n    <Table rowKey={'id'} loading={loading} columns={columns} rowSelection={{}} dataSource={list}  className='gay' bordered pagination={{\r\n      pageSize,\r\n      total,\r\n      current:page,\r\n      pageSizeOptions:[2,5,10],\r\n      showQuickJumper:true,\r\n      showSizeChanger:true,\r\n      showTotal:(total)=>{\r\n        return (`共${total}条`)\r\n      },\r\n      onChange:(page,pageSize)=>{\r\n        setPage(page)\r\n        setpageSize(pageSize)\r\n        fetch(page,pageSize)\r\n      }\r\n    }}/>;\r\n    </Card>\r\n  )\r\n}\r\n","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { SpaceContext } from '.';\nexport default function Item(_ref) {\n  var className = _ref.className,\n      direction = _ref.direction,\n      index = _ref.index,\n      marginDirection = _ref.marginDirection,\n      children = _ref.children,\n      split = _ref.split,\n      wrap = _ref.wrap;\n\n  var _React$useContext = React.useContext(SpaceContext),\n      horizontalSize = _React$useContext.horizontalSize,\n      verticalSize = _React$useContext.verticalSize,\n      latestIndex = _React$useContext.latestIndex,\n      supportFlexGap = _React$useContext.supportFlexGap;\n\n  var style = {};\n\n  if (!supportFlexGap) {\n    if (direction === 'vertical') {\n      if (index < latestIndex) {\n        style = {\n          marginBottom: horizontalSize / (split ? 2 : 1)\n        };\n      }\n    } else {\n      style = _extends(_extends({}, index < latestIndex && _defineProperty({}, marginDirection, horizontalSize / (split ? 2 : 1))), wrap && {\n        paddingBottom: verticalSize\n      });\n    }\n  }\n\n  if (children === null || children === undefined) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    style: style\n  }, children), index < latestIndex && split && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(className, \"-split\"),\n    style: style\n  }, split));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport { ConfigContext } from '../config-provider';\nimport Item from './Item';\nimport useFlexGapSupport from '../_util/hooks/useFlexGapSupport';\nexport var SpaceContext = /*#__PURE__*/React.createContext({\n  latestIndex: 0,\n  horizontalSize: 0,\n  verticalSize: 0,\n  supportFlexGap: false\n});\nvar spaceSize = {\n  small: 8,\n  middle: 16,\n  large: 24\n};\n\nfunction getNumberSize(size) {\n  return typeof size === 'string' ? spaceSize[size] : size || 0;\n}\n\nvar Space = function Space(props) {\n  var _classNames;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      space = _React$useContext.space,\n      directionConfig = _React$useContext.direction;\n\n  var _props$size = props.size,\n      size = _props$size === void 0 ? (space === null || space === void 0 ? void 0 : space.size) || 'small' : _props$size,\n      align = props.align,\n      className = props.className,\n      children = props.children,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'horizontal' : _props$direction,\n      customizePrefixCls = props.prefixCls,\n      split = props.split,\n      style = props.style,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? false : _props$wrap,\n      otherProps = __rest(props, [\"size\", \"align\", \"className\", \"children\", \"direction\", \"prefixCls\", \"split\", \"style\", \"wrap\"]);\n\n  var supportFlexGap = useFlexGapSupport();\n\n  var _React$useMemo = React.useMemo(function () {\n    return (Array.isArray(size) ? size : [size, size]).map(function (item) {\n      return getNumberSize(item);\n    });\n  }, [size]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n      horizontalSize = _React$useMemo2[0],\n      verticalSize = _React$useMemo2[1];\n\n  var childNodes = toArray(children, {\n    keepEmpty: true\n  });\n  var mergedAlign = align === undefined && direction === 'horizontal' ? 'center' : align;\n  var prefixCls = getPrefixCls('space', customizePrefixCls);\n  var cn = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(direction), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), directionConfig === 'rtl'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-align-\").concat(mergedAlign), mergedAlign), _classNames), className);\n  var itemClassName = \"\".concat(prefixCls, \"-item\");\n  var marginDirection = directionConfig === 'rtl' ? 'marginLeft' : 'marginRight'; // Calculate latest one\n\n  var latestIndex = 0;\n  var nodes = childNodes.map(function (child, i) {\n    if (child !== null && child !== undefined) {\n      latestIndex = i;\n    }\n\n    var key = child && child.key || \"\".concat(itemClassName, \"-\").concat(i);\n    return /*#__PURE__*/React.createElement(Item, {\n      className: itemClassName,\n      key: key,\n      direction: direction,\n      index: i,\n      marginDirection: marginDirection,\n      split: split,\n      wrap: wrap\n    }, child);\n  });\n  var spaceContext = React.useMemo(function () {\n    return {\n      horizontalSize: horizontalSize,\n      verticalSize: verticalSize,\n      latestIndex: latestIndex,\n      supportFlexGap: supportFlexGap\n    };\n  }, [horizontalSize, verticalSize, latestIndex, supportFlexGap]); // =========================== Render ===========================\n\n  if (childNodes.length === 0) {\n    return null;\n  }\n\n  var gapStyle = {};\n\n  if (wrap) {\n    gapStyle.flexWrap = 'wrap'; // Patch for gap not support\n\n    if (!supportFlexGap) {\n      gapStyle.marginBottom = -verticalSize;\n    }\n  }\n\n  if (supportFlexGap) {\n    gapStyle.columnGap = horizontalSize;\n    gapStyle.rowGap = verticalSize;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: cn,\n    style: _extends(_extends({}, gapStyle), style)\n  }, otherProps), /*#__PURE__*/React.createElement(SpaceContext.Provider, {\n    value: spaceContext\n  }, nodes));\n};\n\nexport default Space;"],"names":["reqGetHospitalList","page","limit","hoscode","hosname","hostype","provinceCode","cityCode","districtCode","status","request","params","hospitalFindData","dictCode","hospitalFindCity","parentId","reqGetUpdateStatus","id","reqGetHospitalShowList","reqTreeList","reqGetScheduleRules","depcode","reqGetScheduleList","workDate","falg","HospitalList","navigate","useNavigate","Option","Select","useState","setPage","pageSize","setpageSize","list","setList","total","setTotal","Form","form","loading","setLoading","province","setProvince","city","setCity","district","setdistrict","hosType","setHostype","provinceLoading","setProvinceLoading","cityLoading","setCityLoading","districtLoading","setdiscrictLoading","hosTypeLoading","setHostypeLoading","onFinish","values","fetch","value","getFieldsValue","result","content","totalElements","getProvince","getCityList","districtList","hosTypeList","updatStatus","useEffect","columns","title","render","_","record","index","width","align","src","logoData","alt","dataIndex","param","hostypeString","fullAddress","type","onClick","onValuesChange","layout","autoComplete","name","style","marginBottom","placeholder","onChange","setFieldsValue","undefined","map","item","htmlType","resetFields","rowKey","rowSelection","dataSource","className","bordered","pagination","current","pageSizeOptions","showQuickJumper","showSizeChanger","showTotal","Item","_ref","direction","marginDirection","children","split","wrap","_React$useContext","React","SpaceContext","horizontalSize","verticalSize","latestIndex","supportFlexGap","_extends","_defineProperty","paddingBottom","concat","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","spaceSize","small","middle","large","props","_classNames","ConfigContext","getPrefixCls","space","directionConfig","_props$size","size","_props$direction","customizePrefixCls","prefixCls","_props$wrap","otherProps","useFlexGapSupport","_React$useMemo","Array","isArray","getNumberSize","_React$useMemo2","_slicedToArray","childNodes","toArray","keepEmpty","mergedAlign","cn","classNames","itemClassName","nodes","child","key","spaceContext","gapStyle","flexWrap","columnGap","rowGap","Provider"],"sourceRoot":""}